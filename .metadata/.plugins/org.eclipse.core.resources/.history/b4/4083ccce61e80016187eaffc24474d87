package InputAndOutput;

import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;

import multiThreading.Producer;

public class Pipes {
       static PipedOutputStream output = null;
       static PipedInputStream input = null;
	/**
	 * @param args
	 */
	class ThreadA implements Runnable{
		public void run(){
			try{
				output.write("Hello world".getBytes());
			}catch(IOException e){
				e.printStackTrace();
			}
		}
	}
	class ThreadB implements Runnable{
		public void run(){
			try{
				int data = input.read();
                while(data != -1){
                    System.out.print((char) data);
                    data = input.read();
                }
			}catch(IOException e){
				e.printStackTrace();
			}
		}
	}
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		
	       output = new PipedOutputStream();
		   input = new PipedInputStream(output);
		   Thread tProducer = new Thread(new Producer(taskQueue, MAX_CAPACITY), "Producer"); 
		   Thread t1 = new Thread(new ThreadA());

	}

}
